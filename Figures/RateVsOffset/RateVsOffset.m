%% Automate Importing Data by Generating Code Using the Database Explorer App
% This code reproduces the data obtained using the Database Explorer app by
% connecting to a database, executing a SQL query, and importing data into the
% MATLAB(R) workspace. To use this code, add the password for connecting to the
% database in the database command.

% Auto-generated by MATLAB Version 9.5 (R2018b) and Database Toolbox Version 9.0 on 05-Aug-2019 13:28:07

%% Make connection to database
conn = database('rockmodeling','Yoni','Yoni','com.mysql.jdbc.Driver','jdbc:mysql://localhost:3306/rockmodeling?useSSL=false&');

%% Execute query and fetch results
data = fetch(conn,[' select Orientation, NumGrains, avg(Rate) as Rate ' ...
    ' from ( ' ...
    ' select ' ...
    '    	m._id,m.Orientation,m.NumGrains ,tf.TotalDissolution /count(*) as Rate ' ...
    '    from models as m ' ...
    '    join models_info as mi ' ...
    '    on mi.modelid = m._id ' ...
    '    join totaldissolutiononStabilizedsteps as tf ' ...
    '    on tf.modelId = m._id ' ...
    '    join steps s ' ...
    '    	on s.modelid = m._id ' ...
    '        and s.stepId >= mi.SolutionContactStabilizedStepId ' ...
    '        and s.stepId <= mi.SolutionContactStabilizedLastStepId ' ...
    '    where m.Orientation != ''None'' and m.RockType = 3 and m.DoloPercent <0.001 and NumGrains in (100, 800, 1600) ' ...
    '    group by m._id,m.Orientation,m.NumGrains ' ...
    '    )  as t ' ...
    '    group by Orientation, NumGrains order by Orientation']);
%% Close connection to database
close(conn)

%% Clear variables
clear conn


%% Plotting
figure;
i = 1;
Y = [];
for NumGrain = unique(data.NumGrains)'
    Indexes = (data.NumGrains == NumGrain);
    Rates = data.Rate(Indexes);
    Y = [Y Rates];
    i = i+1;
end
X1 = str2double(data.Orientation(Indexes));
createfigure4(X1,Y(:,1),Y(:,2),Y(:,3))

